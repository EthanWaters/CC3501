#include <HardwareSerial.h>
// #include <WiFi.h>
// #include <WiFiUdp.h>
// #include <CAN.h>

// const int canTxPin = 38;  // GPIO pin for CAN transmit
// const int canRxPin = 39;  // GPIO pin for CAN receive
// CAN_message_t message;
// message.len = 8;

// const char* ssid = "elequent";
// const char* password = "elequent137";

// const char* udpServerIP = "192.168.0.128"; // IP address of the UDP server
// const int udpServerPort = 54321; // Port of the UDP server

// WiFiUDP udp;
// Define the UART object ESP32-S3 NO PSRAM
int count = 0;

void setup() {
  Serial.begin(115200); // UART0
 

  // // Connect to Wi-Fi
  // WiFi.begin(ssid, password);
  // while (WiFi.status() != WL_CONNECTED) {
  //   delay(1000);
  //   Serial.println("Connecting to WiFi...");
  // }
  Serial.println("Connected to WiFi");

  // Initialize UDP
  // CAN.setPins(canTxPin, canRxPin);  
  // udp.begin(udpServerPort);
}

void loop() {
 

  // Send a message to all UART channels
  Serial.println("Message to UART0 check");
 
  // sendUdpMessage("Hello, UDP!");
  count += 1;
  if(count == 20){
    Serial.flush();
    Serial.end();
   
  }
  // message.id = 0x100; // CAN message ID
  //   // Data length
  // for (int i = 0; i < 8; i++) {
  //   message.data[i] = i;
  // }
  // Wait for a moment before sending another message
  delay(1000);
}

// void sendUdpMessage(const char* message) {
//   udp.beginPacket(udpServerIP, udpServerPort);
//   udp.print(message);
//   udp.endPacket();
//   Serial.print("Sent UDP message: ");
//   Serial.println(message);
// }